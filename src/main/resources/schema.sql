-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.car
(
    id serial NOT NULL,
    model text NOT NULL,
    brand text NOT NULL,
    door_no integer,
    registration integer,
    kilometers numeric,
    purchase_price numeric,
    colour text,
    metallic boolean,
    region text,
    emission_class text,
    horsepower numeric,
    emission_sticker text,
    fuel_type text,
    cubic_capacity numeric,
    selling_price numeric,
    last_updated_by integer,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.car_feature
(
    id serial,
    feature integer NOT NULL,
    car integer NOT NULL,
    value text,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.feature
(
    id serial,
    name text NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.expense
(
    id serial,
    fuel numeric,
    shipping numeric,
    trailer numeric,
    import_tax numeric,
    travel_cost numeric,
    car integer,
    documentation numeric,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.other_expense
(
    id serial,
    car integer NOT NULL,
    name text NOT NULL,
    cost numeric NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id serial,
    username text NOT NULL,
    password text NOT NULL,
    email text NOT NULL,
    role integer,
    name text NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.role
(
    id serial,
    name text NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.role_permission
(
    id serial,
    name text NOT NULL,
    role integer NOT NULL,
    granted boolean NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.client
(
    id serial,
    id_no text,
    first_name text,
    last_name text,
    email text,
    post_code text,
    address text,
    phone_no text,
    PRIMARY KEY (id_no),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.client_unpaid_payment
(
    id serial,
    client integer NOT NULL,
    amount numeric NOT NULL,
    date date NOT NULL,
    paid boolean NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.client_payment
(
    id serial,
    client integer NOT NULL,
    amount numeric NOT NULL,
    "interval" numeric NOT NULL,
    start_date date NOT NULL,
    car integer NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

ALTER TABLE IF EXISTS public.car
    ADD FOREIGN KEY (last_updated_by)
        REFERENCES public."user" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID;


ALTER TABLE IF EXISTS public.car_feature
    ADD FOREIGN KEY (car)
        REFERENCES public.car (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID;


ALTER TABLE IF EXISTS public.car_feature
    ADD FOREIGN KEY (feature)
        REFERENCES public.feature (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID;


ALTER TABLE IF EXISTS public.expense
    ADD FOREIGN KEY (car)
        REFERENCES public.car (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID;


ALTER TABLE IF EXISTS public.other_expense
    ADD FOREIGN KEY (car)
        REFERENCES public.car (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID;


ALTER TABLE IF EXISTS public."user"
    ADD FOREIGN KEY (role)
        REFERENCES public.role (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE NO ACTION
        NOT VALID;


ALTER TABLE IF EXISTS public.role_permission
    ADD FOREIGN KEY (role)
        REFERENCES public.role (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID;


ALTER TABLE IF EXISTS public.client_unpaid_payment
    ADD FOREIGN KEY (client)
        REFERENCES public.client (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID;


ALTER TABLE IF EXISTS public.client_payment
    ADD FOREIGN KEY (client)
        REFERENCES public.client (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID;


ALTER TABLE IF EXISTS public.client_payment
    ADD FOREIGN KEY (car)
        REFERENCES public.car (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID;

END;